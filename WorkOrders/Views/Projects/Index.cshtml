@model WorkOrders.Models.ViewModels.Project_Filter

@{
    ViewData["Title"] = "Index";
}
<div class="text-center">
    <h1 >Projects</h1>
<p>




    <a asp-action="Create" class="btn btn-primary">Create New <i class="fa-solid fa-plus"></i></a>
</p>
</div>


<form asp-action="Index" method ="post">
    <div class="row col-12">
         <div class="form-group col-3">
            <label asp-for="CustomerId" class="control-label"></label>
            <input  type="text" asp-for="CustomerId" class="form-control" list="customerList"   />
            <datalist id="customerList">
                    @foreach(var item in Model.Customers)
                {
                    <option value=@item.Value>@item.Text</option>
                }
            </datalist>

         </div>

         <div class="form-group col-3">

             <label asp-for="ProjectId" class="control-label">Project Name</label>
             <select asp-for="ProjectId" asp-items="Model.Projects" class = "form-control">
                <option value ="">Please select a project</option>
            </select>

         </div>     


    </div>

        <div class="form-group col-3">
         <button type="submit" class="btn btn-primary searchButton" >Search <i class="fa-solid fa-magnifying-glass"></i></button>
    </div>

</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Customer
            </th>
@*            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>*@
@*            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedOn)
            </th>*@

            <th></th>
        </tr>
    </thead>
    <tbody>
        
@foreach (var item in Model.Project ) {
            if(@item.IsActive == true)
            {
            <tr>
            <td>
                @item.Name
            </td>
            <td>
                @item.Customer.Name
            </td>
@*            <td>
                @item.IsActive
            </td>*@
@*            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedOn)
            </td>
*@
            <td>
                <div class="table-action-buttons">
                <a asp-action="Edit" asp-route-id="@item.ProjectId"  class="btn btn-primary"><i class="fa-solid fa-pen-to-square"></i></a> 
                <a asp-action="Details" asp-route-id="@item.ProjectId"  class="btn btn-primary"><i class="fa-solid fa-info"></i></a> 
                <a asp-action="Delete" asp-route-id="@item.ProjectId"  class="btn btn-primary"><i class="fa-solid fa-trash-can"></i></a>
                </div>
            </td>
        </tr>  
            }

}
    </tbody>
</table>
